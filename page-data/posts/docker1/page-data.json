{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/docker1/","result":{"data":{"site":{"siteMetadata":{"author":{"name":"AKAI","contacts":{"twitter":"akai_pp"}},"disqusShortname":"","subtitle":"Akademickie Koło Aplikacji Internetowych Politechniki Poznańskiej","title":"AKAI","url":"https://akai.org.pl"}},"markdownRemark":{"id":"d39291da-7949-5814-9e58-d936176207cd","html":"<p><img src=\"/media/docker.png\" alt=\"Dockerowy_wieloryb\"></p>\n<h3 id=\"czym-jest-docker\"><a href=\"#czym-jest-docker\" aria-label=\"czym jest docker permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Czym jest Docker?</h3>\n<p>Docker to oprogramowanie, którego głównym zadaniem jest tworzenie kontenerów. Kontenery są zwirtualizowanymi jednostkami zawierającymi\naplikację (czy też raczej jej kod) oraz wszystkie jej zależności. Dzięki temu każdy, kto pracuje nad aplikacją ma dokładnie to samo środowisko uruchomieniowe, co z kolei może nam przyspieszyć prace nad aplikacją. Dodatkowo, każdy kontener jest izolowany od systemu hosta i innych kontenerów, co zwiąksza bezpieczeństwo.</p>\n<h3 id=\"jak-to-działa\"><a href=\"#jak-to-dzia%C5%82a\" aria-label=\"jak to działa permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jak to działa?</h3>\n<p>Aby stworzyć nowy kontener Docker wykorzystuje wcześniej zbudowany obraz. <strong>Obraz (ang. <em>container image</em>)</strong> jest niczym innym jak “podstawą”\nużywaną przez Dockera do uruchomienia <strong>kontenera  (ang. <em>container</em>)</strong>, który jest instancją obrazu. Działa to na bardzo podobnej zasadzie\njak tworzenie maszyn wirtualnych (choć zaznaczamy że nie jest <em>dokładnie</em> tym samym): posiadając obraz systemu na przykład\nw formacie .iso jesteśmy w stanie stworzyć maszynę wirtualną, która stanowi instancję obrazu.</p>\n<p>Bazą obrazu są okrojone wersje systemów operacyjnych, np. Ubuntu. Jest możliwe aby z takiego obrazu utworzyć inne, nowe\nobrazy, kótre zapewniają spełnienie zależności aplikacji. Stworzenie tych obrazów odbywa się przez nałożenie\nna pierwotny obraz nowych <strong>warstw  (ang. <em>layers</em>)</strong>, a więc serii modyfikacji obrazu, które to zapisywane są później jako zmiany tylko\ndo odczytu i które będą składać się na nowy obraz. </p>\n<p>Wszystkie oficjalne obrazy a także te, które zbudujemy sami można opublikować w <strong>rejestrze Dockera (ang. <em>Docker hub</em>). Serwis ten bardzo\nprzypomina znanego każdemu githuba - zawiera on *<em>repozytoria (ang. *repositories</em>)</strong>, z których każde jest skupione na pojedynczym obrazie i\njego różnych wersjach. </p>\n<h3 id=\"jak-tego-użyć-w-praktyce\"><a href=\"#jak-tego-u%C5%BCy%C4%87-w-praktyce\" aria-label=\"jak tego użyć w praktyce permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jak tego użyć w praktyce?</h3>\n<p>Aby przedstawić Wam praktyczne zastosowanie Dockera posłużymy się przykładem obrazu Ubuntu. Możemy utworzyć kontener\nna jego podstawie przez polecenie: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -ti ubuntu</code></pre></div>\n<p>Polecenie <code class=\"language-text\">docker run</code> odpowiada za utworzenie kontenera na podstawie obrazu <code class=\"language-text\">ubuntu</code>. Jako argumenty przyjmuje najpierw\nopcje takie jak <code class=\"language-text\">-ti</code>, a potem nazwę obrazu. Po uruchomieniu tego polecenia Docker próbuje znaleźć obraz lokalnie, ale\njeżeli nie mieliśmy go na komputerze wcześniej to oczywiście nie znajdzie go. Wtedy sięgnie do znanych sobie rejestrów\nDockera i tam znajdzie obraz o takiej samej nazwie. Rozpocznie się jego pobieranie. Jest to proces jednorazowy, to znaczy\ndopóki nie usuniemy lokalnej wersji obrazu to Docker nie będzie go pobierał ponownie gdyż nie ma takiej potrzeby. Kiedy\nobraz zostanie pobrany to pod naszą sesję konsoli zostanie podpięty strumień wyjścia i wejścia z basha kontenera. Za ten\nefekt odpowiada opcja <code class=\"language-text\">-ti</code>: zapewnia ona tryb interaktywny, który pozwoli nam jako użytkownikom interagować z programem\nodpalonym w kontenerze, w tym przypadku z poleceniem <code class=\"language-text\">/bin/bash -c</code></p>\n<p>Na tym zakończymy część pierwszą. W następnej części przedstawimy więcej podstawowych komend i opcji uruchomieniowych\nkontenerów. Są to podstawy niezbędne do tego aby w przyszłości zaprezentować używanie Dockera z aplikacjami i zapewniania\nim zależności.</p>\n<p><em>- Dawid Dziedzic</em></p>\n<blockquote>\n<p>Jeśli masz jakieś uwagi lub sugestie podeślij nam je na adres <a href=\"mailto:kontakt@akai.org.pl\">kontakt@akai.org.pl</a> lub kontrybuuj do naszego <a href=\"https://github.com/akai-org/blog\">repozytorium</a>.</p>\n</blockquote>","fields":{"slug":"/posts/docker1/","tagSlugs":["/tag/docker/","/tag/dev-ops/"]},"frontmatter":{"date":"2020-04-18T16:40:00.169Z","description":"Część pierwsza z serii artykułów wprowadzających do Dockera","tags":["Docker","DevOps"],"title":"Wprowadzenie do Dockera, cz. 1"}}},"pageContext":{"slug":"/posts/docker1/"}}}