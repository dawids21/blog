{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/codeigniter1/","result":{"data":{"site":{"siteMetadata":{"author":{"name":"AKAI","contacts":{"twitter":"akai_pp"}},"disqusShortname":"","subtitle":"Akademickie Koło Aplikacji Internetowych Politechniki Poznańskiej","title":"AKAI","url":"https://akai.org.pl"}},"markdownRemark":{"id":"b2c57c63-fb75-5b7f-9d9c-138bc5f8c4f9","html":"<p><img src=\"/media/codeigniter.png\" alt=\"CodeIgniter_flame\"></p>\n<h3 id=\"czym-jest-codeigniter-4\"><a href=\"#czym-jest-codeigniter-4\" aria-label=\"czym jest codeigniter 4 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Czym jest CodeIgniter 4</h3>\n<p>CodeIgniter jest otwartoźródłowym frameworkiem języka PHP który pomaga oraz ułatwia pisanie aplikacji internetowych - jak w każdym frameworku szkielet aplikacji jest już gotowy, a poszczególne warstwy aplikacji można rozdzielać. Obecnie jego najnowsza wersja - 4.0.4 jest stosunkowo młoda - wyszła w lipcu tego roku i wprowadziła dużo zmian - między innymi cały kod został przepisany od nowa. Z tego też powodu migracja aplikacji napisanych w starszych wersjach CodeIgnitera jest uniemożliwiona na najnowszą. Jednak jak zapewniają twórcy migracja aplikacji napisanej w 4.x będzie możliwa na wyższe wersje frameworka. </p>\n<h3 id=\"wzorzec-projektowy-mvc\"><a href=\"#wzorzec-projektowy-mvc\" aria-label=\"wzorzec projektowy mvc permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wzorzec projektowy MVC</h3>\n<p>CodeIgniter pozwala na budowę aplikacji zgodnie z wzorcem projektowym MVC (eng. <em>Model, View, Controller</em>) – Model, Widok, Kontroler.\n<strong>Warstwa modelu</strong> dotyczy logiki aplikacji, zapewnia dostęp do danych np. z bazy danych MySQL.</p>\n<p><strong>Warstwa widoku</strong> jest odpowiedzialna za obsługę wyświetlania widoku strony dla użytkownika, może być realizowana np. poprzez wygenerowanie odpowiedniego szablonu, w zależności od tego czy skorzystamy z dynamicznego czy statycznego sposobu zarządzania danymi.</p>\n<p><strong>Warstwa kontrolera</strong> jest to warstwa odpowiedzialna za funkcjonowanie aplikacji, przetwarza dane wejściowe użytkownika i odpowiednio reaguje na jego działania np. wywołując akcję, model bądź widok.</p>\n<h3 id=\"wymagania-codeignitera\"><a href=\"#wymagania-codeignitera\" aria-label=\"wymagania codeignitera permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wymagania CodeIgnitera</h3>\n<p>CodeIgniter 4 wymaga PHP w wersji co najmniej 7.2 z włączonymi rozszerzeniami:</p>\n<ul>\n<li>php-json</li>\n<li>php-mbstring</li>\n<li>php-mysqlnd</li>\n<li>php-xml</li>\n</ul>\n<p>W tutorialu będę również korzystać z menadżera oprogramowania dla PHP - <a href=\"https://getcomposer.org/\">composera</a>, zalecam używanie najnowszej wersji.</p>\n<h3 id=\"instalacja-codeignitera\"><a href=\"#instalacja-codeignitera\" aria-label=\"instalacja codeignitera permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instalacja CodeIgnitera</h3>\n<p>By zainicjować szkielet naszej aplikacji wystarczy, że wpiszemy następującą komendę:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">composer create-project codeigniter4/appstarter projekt1</code></pre></div>\n<p>Po pomyślnym wykonaniu komendy composera możemy wejść w nasz główny folder aplikacji <em>projekt1</em></p>\n<p>Spróbujmy odpalić naszą aplikację tak by sprawdzić czy wszystko poprawnie się zainstalowało używając komendy</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">php spark serve</code></pre></div>\n<p>Dzięki temu, że CodeIgniter ma wbudowany swój serwer HTTP nie musimy posiadać zainstalowanego w systemie serwera HTTP jak apache czy nginx.</p>\n<p>Jeżeli komenda przebiegła pomyślnie powinniśmy zobaczyć podobny komunikat:</p>\n<p><img src=\"/media/codeigniter_php_spark_ok.png\" alt=\"CodeIgniter_spark\"></p>\n<p>Teraz gdy otworzymy przeglądarkę na <a href=\"http://localhost:8080\">http://localhost:8080</a> powinniśmy zobaczyć domyślną stronę, świadczy ona o poprawnym zainstalowaniu aplikacji.</p>\n<p><img src=\"/media/codeigniter_php_site_ok.png\" alt=\"CodeIgniter_site_ok\"></p>\n<h3 id=\"struktura-aplikacji\"><a href=\"#struktura-aplikacji\" aria-label=\"struktura aplikacji permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Struktura aplikacji</h3>\n<p>Teraz opowiem krótko o trzech plikach które przydadzą się w kolejnej części Wprowadzenia.\nPo instalacji powinieneś w swoim IDE ujrzeć taki szkielet aplikacji:</p>\n<p><img src=\"/media/codeigniter_php_app_skeleton.png\" alt=\"CodeIgniter_skeleton\"></p>\n<p>Pierwszym plikiem którym się zainteresujemy będzie plik konfiguracyjny zmiennych <em>env</em> który znajduje się w głównym katalogu naszej aplikacji. W tym pliku możemy swobodnie dodawać wartości które będziemy wykorzystywać w aplikacji m.in. domyślny adres naszej aplikacji czy parametry połączenia z bazą. </p>\n<p>Drugim plikiem ktorym się zainteresujemy jest plik Aplikacji <em>(App.php)</em>\nznajduje się on w katalogu <strong>app/Config</strong>.\nW tym pliku możemy ustalić domyślny język strony, jej kodowanie oraz wiele innych aspektów aplikacji.</p>\n<p>Kolejnym plikiem którym się zainteresujemy będzie plik Routingu <em>(Routes.php)</em> znajduje się on w katalogu <strong>app/Config</strong>.\nW tym pliku możemy definiować ścieżki, które wywołane przez użytkownika w przeglądarce bądź wywołane przez określone zapytania będą uruchamiać odpowiednie kontrolery. Obecnie znajduje się tutaj zdefiniowana ścieżka do domyślnego kontrolera, tak by domyślna strona mogła zadziałać.\n<img src=\"/media/mvc_framework.jpg\" alt=\"CodeIgniter_mvc\"></p>\n<p>Na tym zakończę pierwszą część wprowadzenia do CodeIgnitera, w następnej części przedstawię w jaki sposób możemy podpiąć bazę do naszego projektu, korzystać z niej i przekazywać określone dane pobrane z bazy do widoku.</p>\n<p><em>- Marcin Sylka</em></p>\n<blockquote>\n<p>Jeśli masz jakieś uwagi lub sugestie podeślij nam je na adres <a href=\"mailto:kontakt@akai.org.pl\">kontakt@akai.org.pl</a> lub kontrybuuj do naszego <a href=\"https://github.com/akai-org/blog\">repozytorium</a>.</p>\n</blockquote>","fields":{"slug":"/posts/codeigniter1/","tagSlugs":["/tag/code-igniter/","/tag/backend/","/tag/web-app/","/tag/php/"]},"frontmatter":{"date":"2020-10-21T20:00:00.169Z","description":"Część pierwsza z serii artykułów wprowadzających do CodeIgnitera","tags":["CodeIgniter","Backend","WebApp","PHP"],"title":"Wprowadzenie do CodeIgniter4, część 1"}}},"pageContext":{"slug":"/posts/codeigniter1/"}}}